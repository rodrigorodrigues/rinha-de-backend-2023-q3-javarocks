version: '3.5'
services:
  nginx:
    image: nginx:latest
    container_name: nginx
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.10'
          memory: '0.2GB'
        reservations:
          cpus: '0.10'
          memory: '0.2GB'
    networks:
      net:
        aliases:
          - nginx

  mongodb:
    image: mongo:latest
    container_name: mongodb
    hostname: mongodb
    #    command: --wiredTigerCacheSizeGB 1.5
    ports:
      - "27017:27017"
    deploy:
      resources:
        limits:
          cpus: '0.90'
          memory: '1.4GB'
        reservations:
          cpus: '0.90'
          memory: '1.4GB'
    networks:
      net:
        aliases:
          - mongodb

  # Image built for Mac M1 - fielcapao/rinha-de-backend-2023-q3-javarocks-native:macm1-arm64
  # Image built for Linux - fielcapao/rinha-de-backend-2023-q3-javarocks-native:linux-amd64
  api01:
    image: fielcapao/rinha-de-backend-2023-q3-javarocks-native:macm1-arm64
    container_name: api01
    hostname: api01
    depends_on:
      - mongodb
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/test #?connectTimeoutMS=300000&minPoolSize=2000&&maxPoolSize=5000&maxIdleTimeMS=1000&maxConnecting=2000
      - SERVER_PORT=8080
#      - LOGGING_LEVEL_COM_EXAMPLE=debug
    expose:
      - "8080"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.7GB'
        reservations:
          cpus: '0.25'
          memory: '0.7GB'
    networks:
      net:
        aliases:
          - api01

  api02:
    image: fielcapao/rinha-de-backend-2023-q3-javarocks-native:macm1-arm64
    container_name: api02
    hostname: api02
    depends_on:
      - mongodb
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/test #?connectTimeoutMS=300000&minPoolSize=2000&maxPoolSize=5000&maxIdleTimeMS=1000&maxConnecting=2000
      - SERVER_PORT=8080
#      - LOGGING_LEVEL_COM_EXAMPLE=debug
    expose:
      - "8080"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.7GB'
        reservations:
          cpus: '0.25'
          memory: '0.7GB'
    networks:
      net:
        aliases:
          - api02

#
#  prometheus:
#    image: prom/prometheus
#    container_name: prometheus
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#    volumes:
#      - ./prometheus.yml:/etc/prometheus/prometheus.yml
#    ports:
#      - "9090:9090"
#    depends_on:
#      - nginx
#      - api01
#      - api02
#
#  grafana:
#    image: grafana/grafana
#    container_name: grafana
#    ports:
#      - "3000:3000"
#    environment:
#      - GF_AUTH_ANONYMOUS_ENABLED=true
#      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
#      - GF_SERVER_HTTP_PORT=3000
#    depends_on:
#      - prometheus
#
#  setup_grafana_datasource:
#    image: appropriate/curl
#    container_name: setup_grafana_datasource
#    depends_on:
#      - grafana
#    volumes:
#      - ./create-datasource-and-dashboard.sh:/create.sh:ro
#    command: /create.sh

networks:
  net:
